{"ast":null,"code":"var _jsxFileName = \"/Users/sksingh/Projects/chat-app/client/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { BASE_URL, postRequest } from \"../utility/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [registerError, setRegisterError] = useState(null);\n  const [isRegisterLoading, setIsRegisterLoading] = useState(false);\n  const [registerInfo, setRegisterInfo] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  console.log(\"after page refresh user\", user);\n  useEffect(() => {\n    let user = localStorage.getItem(\"User\");\n    setUser(JSON.parse(user));\n  }, []);\n  const updateRegisterInfo = useCallback(info => {\n    setRegisterInfo(info);\n  }, []);\n  const registerUser = useCallback(async e => {\n    e.preventDefault();\n    setIsRegisterLoading(true);\n    setRegisterError(null);\n    const response = await postRequest(`${BASE_URL}/users/register`, JSON.stringify(registerInfo));\n    if (response.error) {\n      setRegisterError(response);\n    } else {\n      localStorage.setItem(\"User\", JSON.stringify(response));\n    }\n    setUser(response);\n    setIsRegisterLoading(false);\n  }, [registerInfo]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      registerInfo,\n      updateRegisterInfo,\n      registerUser,\n      registerError,\n      isRegisterLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"3rxJk3t4Tvd7F2zEZhlgdUz43Kw=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useCallback","useEffect","useState","BASE_URL","postRequest","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","user","setUser","registerError","setRegisterError","isRegisterLoading","setIsRegisterLoading","registerInfo","setRegisterInfo","name","email","password","console","log","localStorage","getItem","JSON","parse","updateRegisterInfo","info","registerUser","e","preventDefault","response","stringify","error","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sksingh/Projects/chat-app/client/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useCallback, useEffect, useState } from \"react\";\nimport { BASE_URL, postRequest } from \"../utility/services\";\n\nexport const AuthContext = createContext();\n\nexport const AuthContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [registerError, setRegisterError] = useState(null);\n  const [isRegisterLoading, setIsRegisterLoading] = useState(false);\n  const [registerInfo, setRegisterInfo] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  console.log(\"after page refresh user\",user);\n\n  useEffect(() => {\n    let user = localStorage.getItem(\"User\");\n    setUser(JSON.parse(user));\n  },[])\n  const updateRegisterInfo = useCallback((info) => {\n    setRegisterInfo(info);\n  }, []);\n\n  const registerUser = useCallback(async (e) => {\n    e.preventDefault();\n    \n    setIsRegisterLoading(true);\n    setRegisterError(null);\n\n    const response = await postRequest(\n      `${BASE_URL}/users/register`,\n      JSON.stringify(registerInfo)\n    );\n\n    if (response.error) {\n      setRegisterError(response);\n    }else{\n      localStorage.setItem(\"User\", JSON.stringify(response));\n    }\n\n    setUser(response);\n    setIsRegisterLoading(false);\n  }, [registerInfo]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        registerInfo,\n        updateRegisterInfo,\n        registerUser,\n        registerError,\n        isRegisterLoading\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvE,SAASC,QAAQ,EAAEC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC;IAC/CiB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACZ,IAAI,CAAC;EAE3CV,SAAS,CAAC,MAAM;IACd,IAAIU,IAAI,GAAGa,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACvCb,OAAO,CAACc,IAAI,CAACC,KAAK,CAAChB,IAAI,CAAC,CAAC;EAC3B,CAAC,EAAC,EAAE,CAAC;EACL,MAAMiB,kBAAkB,GAAG5B,WAAW,CAAE6B,IAAI,IAAK;IAC/CX,eAAe,CAACW,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAG9B,WAAW,CAAC,MAAO+B,CAAC,IAAK;IAC5CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBhB,oBAAoB,CAAC,IAAI,CAAC;IAC1BF,gBAAgB,CAAC,IAAI,CAAC;IAEtB,MAAMmB,QAAQ,GAAG,MAAM7B,WAAW,CAC/B,GAAED,QAAS,iBAAgB,EAC5BuB,IAAI,CAACQ,SAAS,CAACjB,YAAY,CAC7B,CAAC;IAED,IAAIgB,QAAQ,CAACE,KAAK,EAAE;MAClBrB,gBAAgB,CAACmB,QAAQ,CAAC;IAC5B,CAAC,MAAI;MACHT,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACQ,SAAS,CAACD,QAAQ,CAAC,CAAC;IACxD;IAEArB,OAAO,CAACqB,QAAQ,CAAC;IACjBjB,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC;EAElB,oBACEX,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IACnBC,KAAK,EAAE;MACL3B,IAAI;MACJM,YAAY;MACZW,kBAAkB;MAClBE,YAAY;MACZjB,aAAa;MACbE;IACF,CAAE;IAAAN,QAAA,EAEDA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CAvDWF,mBAAmB;AAAAmC,EAAA,GAAnBnC,mBAAmB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}